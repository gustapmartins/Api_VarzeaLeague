version: '3.8'

services:
  varzealeague.application:
    build:
      context: .
      dockerfile: VarzeaTeam.Application/Dockerfile
    container_name: varzeaLeague_api_container
    networks:
      - elastic
    restart: always
    depends_on:
      - mongodb
      - elasticsearch
      - kafka
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - VarzeaLeagueDatabase__ConnectionString=mongodb://mongodb_container:27017
      - ElasticSearchSettings__Url=http://elasticsearch:9200
      - Kafka__BootstrapServers=kafka-server:29092
    command: ["dotnet", "watch", "run", "--project", "/src/VarzeaTeam.Application/VarzeaLeague.Application.csproj", "--urls", "http://+:443;http://*:80"]
    ports:
      - "8080:80"
    volumes: 
      - .:/src
      - ~/.aspnet/https:/https:ro
      - /path/to/persistent/storage:/root/.aspnet/DataProtection-Keys

  mongodb:
    image: mongo:latest
    restart: always
    container_name: mongodb_container
    ports:
      - "27017:27017"
    networks:
      - elastic

  elasticsearch:
    image: elasticsearch:7.17.9
    container_name: elasticSearch_container
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic

  kibana:
    image: kibana:7.17.9
    container_name: kibana_container
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - elastic

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - elastic

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-server
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - elastic

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - 19000:9000
    restart: always
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    networks:
      - elastic

networks:
  elastic:
    driver: bridge
