version: '3.8'

services:
  varzealeague.application:
    image: ${DOCKER_REGISTRY-}varzealeagueapplication
    build:
      context: .
      dockerfile: VarzeaTeam.Application\Dockerfile
    container_name: varzeaLeague_api_containercls
    networks:
      - elastic
    depends_on: 
      - mongodb

  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    ports:
      - "27017:27017"
    networks:
      - elastic

  elasticsearch:
    image: elasticsearch:7.17.9
    container_name: elasticSearch_container
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
    ulimits: 
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic

  kibana: 
    image: kibana:7.17.9
    container_name: kibana_container
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - elastic

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - elastic
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - elastic
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - elastic
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

networks:
  elastic:
    driver: bridge
